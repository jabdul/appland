{
  "name": "grunt-qunit-junit",
  "description": "Produce JUnit XML reports for QUnit tests",
  "version": "0.1.0-alpha",
  "homepage": "https://github.com/sbrandwoo/grunt-qunit-junit",
  "author": {
    "name": "Stephen Brandwood",
    "email": "stephen.brandwood@gmail.com",
    "url": "http://stephenbrandwood.co.uk"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sbrandwoo/grunt-qunit-junit"
  },
  "bugs": {
    "url": "https://github.com/sbrandwoo/grunt-qunit-junit/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sbrandwoo/grunt-qunit-junit/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "underscore": "~1.4.3"
  },
  "devDependencies": {
    "grunt": "~0.4.0rc1",
    "grunt-contrib-jshint": "~0.1.0",
    "grunt-contrib-clean": "~0.4.0a",
    "grunt-contrib-connect": "~0.1.0",
    "grunt-contrib-qunit": "git+https://github.com/sbrandwoo/grunt-contrib-qunit.git#do-not-exit-on-fail"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-qunit-junit\n\n> JUnit compatible XML reporter for QUnit\n\nThis plugin produces XML reports for all QUnit tests that you run with grunt. The XML reports match those created by JUnit and are perfect for loading into Jenkins.\n\nThis plugin only works with grunt 0.4.x. If you are using 0.3.x, then I recommend the [grunt-junit plugin](https://github.com/johnbender/grunt-junit).\n\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n**WARNING**: This plugin is only released in alpha form! Please give it a go and pass any issues you find back to me. I'd also be interested to hear how you use QUnit in you project and if there are any helpful features I can add to this plugin.\n\n**WARNING**: This plugin is currently dependant on a branch of `grunt-contrib-junit`. This will be cleaned up in the near future, when more testing has been completed. [See the branch](https://github.com/sbrandwoo/grunt-contrib-qunit/tree/fail-events) for the changes.\n\n```bash\nnpm install grunt-qunit-junit --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-qunit-junit');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task, `qunit_jnit`. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"qunit_junit\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `qunit_junit` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\n    qunit_junit: {\n        options: {\n            // Task-specific options go here.\n        }\n    },\n})\n```\n\n### Options\n\n#### options.dest\nType: `String`\nDefault value: `'_build/test-reports'`\n\nSpecify where the XML reports should be saved to.\n\n#### options.namer\nType: `Function`\nDefault value: `path.basename(url).replace(/\\.html$/, '')`\n\nSpecify a function that converts test URLs into dot-separated classnames. The classname for each test is used to build the report's filename and is placed inside the XML reports themselves.\n\nThe resulting values should represent full classpaths as you might see in Java, such as `my.example.package.someFile` or `com.example.coolthings.Sorter`; the main restriction is that folders or packages must be separated by dots. These enable tools such as Jenkins to group the tests and provide an interface to drill down into the results.\n\nThe default implementation takes the final part of the URL and strips `.html` from it. If you have nested folder structures then I suggest you override this option.\n\nFor example if you have test URLs of the form `http://localhost:8000/test/runner.html?test=example/Adder`, then you could use the following:\n\n```js\nqunit_junit: {\n    options: {\n        namer: function (url) {\n            var match = url.match(/test=(.*)$/);\n            return match[1].replace(/\\//g, '.');\n        }\n    }\n}\n```\n\n### Usage Examples\n\nTo trigger the XML reporting, simply call the `qunit_junit` task before you call the `qunit` task. A report will be created for all tests run by QUnit.\n\nTypically, you'll use it as part of a list of commands like this:\n\n```js\ngrunt.registerTask('test', ['connect:server', 'qunit_junit', 'qunit']);\n```\n\nIf you call the `qunit_junit` task again, then the existing reporter will be detached and the new one will report in its place.\n\n## Example reports\n\nThe following report is an example of a test class that was composed of 3 tests, one of which had a failure. The `classname` attribute is built from the path and name of the test file, and the QUnit module names are added to the `name` attribute.\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n  <testsuite name=\"example.package.TestClass\" errors=\"1\" failures=\"1\" tests=\"3\">\n    <testcase classname=\"example.package.TestClass\" name=\"My module: First test\" assertions=\"1\">\n    </testcase>\n    <testcase classname=\"example.package.TestClass\" name=\"My module: Second test\" assertions=\"2\">\n    </testcase>\n    <testcase classname=\"example.package.TestClass\" name=\"My module: Third test\" assertions=\"2\">\n      <error type=\"failed\" message=\"Died on test #1: Can't find variable: other\">\n  at http://localhost:8000/vendor/qunit-1.10.0.js:343\n    at http://localhost:8000/test/example/package/TestClass.test.js:29\n    at http://localhost:8000/vendor/require-2.0.6.js:32\n    at http://localhost:8000/vendor/require-2.0.6.js:21\n    at http://localhost:8000/vendor/require-2.0.6.js:25\n    at http://localhost:8000/vendor/require-2.0.6.js:7\n    at http://localhost:8000/vendor/require-2.0.6.js:26\n    at o (http://localhost:8000/vendor/require-2.0.6.js:7)\n    at http://localhost:8000/vendor/require-2.0.6.js:26\n    at http://localhost:8000/vendor/require-2.0.6.js:22\n    at http://localhost:8000/vendor/require-2.0.6.js:25\n    at http://localhost:8000/vendor/require-2.0.6.js:7\n    at http://localhost:8000/vendor/require-2.0.6.js:26\n    at o (http://localhost:8000/vendor/require-2.0.6.js:7)\n    at http://localhost:8000/vendor/require-2.0.6.js:26\n    at http://localhost:8000/vendor/require-2.0.6.js:22\n    at http://localhost:8000/vendor/require-2.0.6.js:26\n    at http://localhost:8000/vendor/require-2.0.6.js:19\n    at W (http://localhost:8000/vendor/require-2.0.6.js:17)\n    at http://localhost:8000/vendor/require-2.0.6.js:30\n    at http://localhost:8000/vendor/require-2.0.6.js:3\n      </error>\n      <failure type=\"failed\" message=\"Expected 2 assertions, but 1 were run\">\n      </failure>\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\nAdditionally, if a test run fails completely a report of the following form will be generated:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n  <testsuite name=\"example.AnotherClass\" errors=\"1\" failures=\"0\" tests=\"1\">\n    <testcase classname=\"example.AnotherClass\" name=\"main\" assertions=\"1\">\n      <error type=\"timeout\" message=\"Test timed out, possibly due to a missing QUnit.start() call.\"></error>\n    </testcase>\n  </testsuite>\n</testsuites>\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n* 0.1.0-alpha is available for testing purposes.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-qunit-junit@0.1.0-alpha",
  "dist": {
    "shasum": "16b1a3b25073e993140d99b92295cce01b9ddd07"
  },
  "_from": "grunt-qunit-junit@"
}
